package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _markdown_blog_page_md = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\xd5\xe5\x0a\xc9\x2c\xc9\x49\xb5\x52\x70\xca\xc9\x4f\x57\x28\x48\x4c\x4f\xe5\x0a\x2e\xcd\xcd\x4d\x2c\xaa\xb4\x52\x08\xc9\xc8\x2c\x56\xc8\x2c\x56\x48\x54\x48\x82\x4b\xfa\x24\x56\xe6\x97\x96\x58\x29\x64\xe6\xa5\xa4\x56\x70\x05\xe7\x94\xa6\x5b\x29\xe8\x73\x79\x16\x3b\x16\x95\x64\x26\x83\xcc\x49\x4b\xcc\x29\x4e\xe5\xd2\xd5\xd5\x05\x04\x00\x00\xff\xff\x04\x66\x5b\xc1\x5c\x00\x00\x00")

func markdown_blog_page_md() ([]byte, error) {
	return bindata_read(
		_markdown_blog_page_md,
		"markdown/blog_page.md",
	)
}

var _markdown_error_md = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\xd5\xe5\x0a\xc9\x2c\xc9\x49\xb5\x52\x70\x2d\x2a\xca\x2f\x52\x28\x48\x4c\x4f\xe5\x0a\x2e\xcd\xcd\x4d\x2c\xaa\xb4\x52\x08\xc9\xc8\x2c\x56\xc8\x2c\x56\x48\xcc\x53\x48\x45\x48\xfb\x24\x56\xe6\x97\x96\x58\x29\x64\xe6\xa5\xa4\x56\x70\x05\xe7\x94\xa6\x5b\x41\xa4\xb9\x3c\x8b\x1d\x8b\x4a\x32\x93\x41\xc6\xa5\x25\xe6\x14\xa7\x72\xe9\xea\xea\x02\x02\x00\x00\xff\xff\xf8\xda\x0d\x5d\x63\x00\x00\x00")

func markdown_error_md() ([]byte, error) {
	return bindata_read(
		_markdown_error_md,
		"markdown/error.md",
	)
}

var _markdown_first_article_md = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4f\x6f\xe3\x38\x0f\xc6\xef\xfe\x14\x0f\x90\xcb\xfb\x02\xf1\x60\x30\xbb\xa7\x5c\x06\xc1\x34\xc0\x16\xdb\x7f\x68\xbb\x33\xbb\xa7\x86\xb1\xe8\x44\x88\x2c\x7a\x24\x3a\x6e\xbe\xfd\x82\x76\xe2\x66\xda\xbd\xc9\x96\x44\x3e\xfc\xe9\x21\xcb\xb2\x2c\x9e\xbd\x06\x5e\x60\x2b\xc1\x35\x94\xf6\x65\xc3\x4a\xc5\x53\xd7\x34\x94\x8e\x0b\x2c\x9d\xc3\x3f\xcb\xdb\x1b\xd8\x6f\x47\x4a\x50\x81\xee\x18\x4e\xaa\xae\xe1\xa8\xc5\x33\x6d\xf3\xa2\x00\x80\x12\x16\xc0\x49\x1f\x4f\x9f\xe7\x98\xc5\x0d\x1d\xa5\xd3\x05\x28\xa9\xaf\x02\x17\x4f\xa1\xdb\x2e\x50\xfb\x94\xb5\x3c\xff\xbb\xce\xcb\x71\xb5\x80\xa6\x8e\x0b\xd3\x36\xc3\x37\x69\xda\x70\xc4\xd2\x1d\x28\x2a\x6d\x19\x3d\x6f\x76\x22\x7b\xdc\x3e\x15\xc5\x6c\x86\x87\x24\x9b\xc0\x8d\xa9\xda\x30\xb2\x84\x03\xbb\xa2\x28\xf1\x83\xd1\x53\x54\x48\xcb\x89\xd4\x4b\x84\x32\x35\x68\xb8\xd9\x70\xca\x76\xdc\x09\xba\xd6\x91\x72\x86\x8f\x43\x49\x1f\x72\xb5\x81\xb4\x96\xd4\x14\x25\x56\x07\x4e\xc7\xd3\x85\xf3\xf9\x61\x3b\x49\x83\xde\x87\x00\x4d\x7e\xbb\xe5\x04\x9a\x24\x9e\x34\x71\x54\x5b\x4a\x97\xf0\xfd\x0b\x96\x0f\xd7\x73\x6c\xb8\xa2\x2e\x33\xa4\xb6\x40\x3e\x81\x3a\x95\x4c\x07\x46\xcd\xa4\x5d\xb2\x32\x91\xb8\x62\x7f\x60\xa8\x08\x1a\x8a\x47\xb4\x74\x0c\x42\xce\xf4\x66\x65\x72\x76\x5d\x22\x7f\x02\xbf\x2e\x70\x4b\x69\xef\xe3\x16\x84\xcc\x94\xaa\x9d\xa5\xec\x77\x5e\x39\xf8\xac\xec\x40\xd1\xa1\xa6\x90\xf9\xa5\x95\xec\xd5\x02\xff\x22\xfb\xb7\xf2\xf7\xb7\x04\x6f\xca\x3f\x15\x25\x1e\xc6\xdf\x67\x41\x0e\x95\x44\x25\x1f\x33\xae\xaf\xb2\x89\x48\x9c\xa5\x4b\x15\x67\xe8\x8e\x14\x3d\x27\x46\xb5\xa3\xb8\x65\x37\xc7\xa6\x53\x44\xd1\x81\x58\xdd\x85\x80\xc4\x3f\x3b\x9f\xd8\x4d\xd7\xe6\xc8\x82\x5a\x12\x78\x80\x7c\xc6\xf7\x86\x60\x6e\xeb\xc8\xec\x06\xf3\x4d\x9c\x33\x57\x12\xdd\x10\x8f\xf3\xc0\xf8\xc3\x0b\xaa\xbc\x61\xdc\x31\xfa\x9d\x04\xc6\x60\xe3\x0d\xd7\x92\x18\x99\x0c\x9a\x57\x7b\x53\x7b\x21\xdb\xdb\x50\xe6\x4f\xa3\x87\x2c\xa9\xc1\xc3\xcf\x8e\xbb\x21\x5c\x56\xbb\xa6\x3b\xce\x3c\xf1\x9a\xa3\x27\xaf\x78\x05\x35\xd2\x99\xe9\xea\x93\x36\x03\xc2\xd1\x40\x3a\x7b\x29\x64\x1f\xb7\x61\xbc\x47\xe2\x2e\x5c\xd1\x48\x94\xe0\x75\x37\x78\xfa\x0f\xe9\x07\xe1\x5d\x44\x90\x8a\xc2\x57\x33\xf4\x63\x17\xb1\x6e\x68\xcf\x6b\x48\x1a\x57\x50\xce\x5a\x26\xaa\x78\x5d\x94\xb8\x4f\xd8\x74\x3e\x38\x0c\x96\xb4\x6a\xaf\xa4\xda\x73\xaa\x7d\xe0\x29\xac\x57\xf4\x92\xf6\xf9\xeb\xa9\x47\x76\xe6\x39\x42\x43\xed\xf8\x74\x54\x69\x06\xe5\x73\xc1\x67\xe3\xab\x6f\xf8\xc2\xd8\xa7\xba\xe1\xf3\xe4\x89\x39\x08\x91\x7b\x70\xd4\x74\xb4\x0d\x73\xb3\x3b\x77\xca\x48\xaf\xb3\xf2\x87\xef\xf5\xe8\xd1\x17\xef\xd6\x63\xb6\x3d\x1f\x07\x87\xae\x1f\x57\x4f\xab\xbb\xab\x97\xeb\xbb\xe7\xd5\xe3\xf7\xe5\xcd\xcb\xd3\xea\xdb\xfa\x3f\xb0\x52\x86\x6a\x28\x4a\x5c\xd7\x97\xad\x32\x99\xbf\xf7\xba\x1b\x32\x65\x6a\x7e\x4d\xd7\x33\xe4\xc0\x29\x79\x37\x5a\x42\x82\x9b\xb2\x8f\x21\x97\xc8\xdc\x52\xb2\x46\xdf\x0a\x92\x74\xea\xa3\xf9\x99\xab\x7d\xbe\xa8\x66\x34\xeb\xfa\xc7\xfd\xe3\x9f\xab\xc7\x97\xa7\x9b\xd5\xea\xe1\x9d\xec\x49\x6c\x74\xf0\x35\xac\x85\x2d\x93\xcf\xe0\xd7\x76\xe8\x80\xc1\x1d\xef\x81\x18\x3c\x9b\x19\x94\x27\xd0\x1f\x8d\x72\x6a\xd1\x36\x49\xc5\x39\xb3\x1b\x51\x58\xa8\xe9\x44\xe2\xdc\x0e\xf9\x07\x18\x04\xe7\xeb\x9a\x93\x45\xce\x4a\xda\x65\x54\x32\x32\x88\x58\x7f\xf9\xfc\x79\x3d\x1f\xd7\x84\xc4\xf6\x86\x95\x31\xe7\x64\x72\x7c\xac\x12\xdb\xb0\x3f\xcd\x11\x4b\xa3\x1a\x6c\x8b\x42\x96\xcb\xfd\x37\x1d\xb1\xb3\x51\x3b\x8e\x07\x4d\x9e\x87\xa9\x32\x74\xc2\xfb\x82\xf9\xb5\x62\xc7\x23\xdb\xb3\x01\x6e\x97\x7f\xbf\x7c\xbb\xff\xeb\xee\xf9\x2c\xcb\x36\x4f\xf4\x1c\x07\x36\x29\xff\xeb\x25\x65\x45\x45\x99\x91\x2b\x8e\x94\xbc\x58\x12\x3a\x88\x37\xa1\xf0\xb1\xf6\xd1\x2b\x23\x88\xb4\xff\x7f\x93\xf6\x9e\x76\x57\x19\x44\x1b\x4e\xc7\x69\x5c\x5f\xb0\xfe\xa8\x20\x71\x23\x66\xef\xa9\xd5\xc6\x6e\x29\x66\xb3\xd9\x0c\xcf\xf7\x57\xf7\x0b\xf3\x91\xb3\xd9\xe4\xfc\xa9\xa1\x5a\x4e\xd9\x46\x71\xac\xf8\x34\x44\x8a\xe2\xdf\x00\x00\x00\xff\xff\x06\x17\x4e\x19\x80\x07\x00\x00")

func markdown_first_article_md() ([]byte, error) {
	return bindata_read(
		_markdown_first_article_md,
		"markdown/first_article.md",
	)
}

var _markdown_second_article_md = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4f\x6f\xdb\x38\x10\xc5\xef\xfa\x14\x0f\xf0\x65\x17\xb0\x8b\xa2\xbb\x27\x5f\x8a\xa0\x31\xb0\xc1\xb6\x4d\x90\x64\xdb\xbd\xc5\x63\x71\x64\x13\xa6\x38\x2a\x39\xb4\xe2\x6f\xbf\x18\x49\xb6\xf3\x67\x6f\x94\x48\xce\xbc\xf9\xf1\xcd\x2c\x16\x8b\xea\xd1\x6b\xe0\x25\x1e\xb8\x96\xe8\x40\x49\x7d\x1d\xb8\x7a\x28\x6d\x4b\xe9\xb8\xc4\xe3\xce\x67\xf8\x0c\xdd\x31\xf2\xeb\x33\x8f\xb4\xcd\xcb\x0a\x00\x16\x68\x29\xed\x9d\xf4\x71\xfa\xdc\x4a\x70\xf6\xab\xfa\x4a\x47\x29\xba\xbc\xc4\x0d\x65\xbb\x9c\x02\x2d\x4e\x3f\x6f\xf2\xd5\xb8\x5a\x42\x53\xe1\xca\x64\xcd\xf0\x45\xda\x2e\x1c\x71\xe5\x0e\x14\x95\xb6\x8c\x9e\x37\x3b\x91\x3d\xbe\x3d\x54\xd5\x6c\x86\xbb\x24\x9b\xc0\x2d\x54\xb0\x61\x64\x09\x07\x76\x55\xb5\xc0\x4f\x46\x4f\x51\x21\x1d\x27\x52\x2f\x11\xca\xd4\xa2\xe5\x76\xc3\x29\xdb\x71\x27\x28\x9d\x23\xe5\x0c\x1f\x87\xca\xde\xe5\xea\x02\x69\x23\xa9\xad\x16\x58\x1d\x38\x1d\xa7\x0b\xa7\xf3\xc3\x76\x92\x16\xbd\x0f\x01\x9a\xfc\x76\xcb\x09\x74\x96\x38\x69\xe2\xa8\xb6\x94\x92\xf0\xe3\x13\xae\xee\x6e\xe6\xd8\x70\x4d\x25\x33\xa4\xb1\x40\x3e\x81\x8a\x4a\xa6\x03\xa3\x61\xd2\x92\xac\x4c\x24\xae\xd9\x1f\x18\x2a\x82\x96\xe2\x11\x1d\x1d\x83\x90\x33\xbd\x59\x99\x9c\x5d\x97\xc8\x1f\xc0\xcf\x4b\x7c\xa3\xb4\xf7\x71\x0b\x42\x66\x4a\xf5\xce\x52\xf6\x3b\xaf\x1c\x7c\x56\x76\xa0\xe8\xd0\x50\xc8\xfc\xd4\x49\xf6\x6a\x81\x5f\xc9\xfe\x63\xf1\xe7\x25\xc1\x45\xf9\x87\x6a\x81\xbb\xf1\xf7\x49\x90\x43\x2d\x51\xc9\xc7\x8c\x9b\xeb\x6c\x22\x12\x67\x29\xa9\x66\x33\x08\x29\x7a\x4e\x8c\x7a\x47\x71\xcb\x6e\x8e\x4d\x51\x44\xd1\x81\x58\x53\x42\x40\xe2\x5f\xc5\x27\x76\xe7\x6b\x73\x64\x41\x23\x09\x3c\x40\x3e\xe1\xbb\x20\x98\xdb\x3a\x32\x3b\x13\x76\xe1\x3c\x39\xd1\xe2\x71\x1e\x18\xbf\x7b\x41\x95\x0b\xc6\x1d\xa3\xdf\x49\x60\x38\x52\xc2\x86\x1b\x49\x8c\x4c\x06\xcd\xab\xbd\xa9\xbd\x90\xed\x6d\x28\xf3\x87\xd1\x43\x96\xd4\xe0\xe1\x57\xe1\x32\x84\xcb\x6a\xd7\x74\xc7\x99\xcf\xbc\xe6\xe8\xc9\x2b\x9e\x41\xad\x14\x33\x5d\x33\x69\x1b\x3a\x26\x1a\x48\x67\x2f\x85\xec\xe3\x36\x8c\xf7\x48\xdc\x0b\x57\xb4\x12\x25\x78\xdd\x0d\x9e\xfe\x4b\xfa\x41\x78\x89\x08\x52\x53\xf8\x6c\x86\xbe\x2f\x11\xeb\x96\xf6\xbc\x86\xa4\x71\x05\xe5\xac\x8b\x44\x35\xaf\xab\x05\x6e\x13\x36\xc5\x07\x87\xc1\x92\x56\xed\xb5\xd4\x7b\x4e\x8d\x0f\x7c\x0e\xeb\x15\xbd\xa4\x7d\xfe\x3c\xf5\xc8\xce\x3c\x47\x68\xa9\x1b\x9f\x8e\x6a\xcd\xa0\x7c\x2a\xf8\x64\x7c\xf5\x2d\xbf\x30\xf6\x54\xb7\x4d\x84\x93\x27\xe6\x20\x44\xee\xc1\x51\xd3\xd1\x36\xcc\xcd\xee\xd4\x29\x23\xbd\x62\xe5\x0f\xdf\xeb\xd1\xa3\x4f\xde\xad\xc7\x6c\x7b\x3e\x0e\x0e\x5d\xdf\xaf\x1e\x56\xdf\xaf\x9f\x6e\xbe\x3f\xae\xee\x7f\x5c\x7d\x7d\x7a\x58\x7d\x59\xff\x0f\x56\xca\x50\x0d\xd5\x02\x37\xcd\xcb\x56\x39\x9b\xbf\xf7\xba\x1b\xa7\x15\xb5\xaf\xd3\xf5\x0c\x39\x70\x4a\xde\x8d\x96\x90\xe0\xce\xd9\xc7\x90\x57\xc8\xdc\x51\xb2\x46\xdf\x0a\x92\x14\xf5\xd1\xfc\xcc\xf5\x3e\xbf\xa8\x66\x34\xeb\xfa\xe7\xed\xfd\xdf\xab\xfb\xa7\x87\xaf\xab\xd5\xdd\x1b\xd9\x67\xb1\xd1\xc1\x37\xb0\x16\xb6\x4c\x3e\x83\x9f\xbb\xa1\x03\x06\x77\xbc\x05\x62\xf0\x6c\x66\x50\x3e\x83\x7e\x6f\x94\xa9\x45\xbb\x24\x35\xe7\xcc\x6e\x44\x61\xa1\xce\x27\x12\xe7\x6e\xc8\x3f\xc0\x20\x38\xdf\x34\x9c\x2c\x72\x56\xd2\x92\x51\xcb\xc8\x20\x62\xfd\xe9\xe3\xc7\xf5\x7c\x5c\x13\x12\xdb\x1b\xd6\xc6\x9c\x93\xc9\xf1\xb1\x4e\xdc\x72\x3c\xcd\x11\x4b\xa3\x1a\x6c\x8b\x42\x96\x97\xfb\x17\x1d\xb1\xd8\xa8\x1d\xc7\x83\x26\xcf\xc3\x54\x19\x3a\xe1\x6d\xc1\xfc\x5c\xb3\xe3\x91\xed\xc9\x00\xdf\xae\xfe\x7d\xfa\x72\xfb\xcf\xf7\xc7\x93\x2c\xdb\x9c\xe8\x39\x0e\x6c\x52\x7e\xeb\x25\x65\x45\x4d\x99\x91\x6b\x8e\x94\xbc\x58\x12\x3a\x88\x37\xa1\xf0\xb1\xf1\xd1\x2b\x23\x88\x74\xbf\x5f\xa4\xbd\xa5\x5d\x6a\x83\x68\xc3\xe9\x78\x1e\xd7\x2f\x58\xbf\x57\x90\xb8\x15\xb3\xf7\xb9\xd5\xc6\x6e\xa9\x66\xb3\xd9\x0c\x8f\xb7\xd7\xb7\x4b\xf3\x91\xb3\xd9\xe4\xfc\xd4\x50\x1d\xa7\x6c\xa3\x38\xd6\x3c\x0d\x91\xaa\xfa\x2f\x00\x00\xff\xff\xf2\x5e\x83\x8b\x7b\x07\x00\x00")

func markdown_second_article_md() ([]byte, error) {
	return bindata_read(
		_markdown_second_article_md,
		"markdown/second_article.md",
	)
}

var _templates_article_gohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xcd\x6a\xeb\x30\x10\x85\xf7\x7e\x8a\x41\x7b\x4b\x37\x70\x03\x97\x8b\xe2\x75\x17\x4d\xe9\x22\x2f\xa0\xc8\x13\xa4\x46\x3f\x46\x33\x4d\x31\xc6\xef\x5e\x6c\x95\x36\x3f\xdd\x69\x8e\xbe\x39\x3a\x1c\x69\xc7\x31\x74\x8d\x76\x68\xfa\xae\x01\x00\xd0\xec\x39\x60\x37\x4d\x20\xf7\xc8\xe6\xb0\x4c\x30\xcf\x5a\x55\xbd\xa9\x50\xf0\xe9\x0c\x05\xc3\x4e\x10\x8f\x01\xc9\x21\xb2\x00\x57\xf0\xb4\x13\x8e\x79\xa0\xff\x4a\x11\x1b\x7b\x1e\x0c\x3b\x79\xcc\x99\x89\x8b\x19\x6c\x9f\xa4\xcd\x51\x7d\x0b\xea\xaf\xdc\xca\x3f\xca\x12\xfd\x68\x32\xfa\x24\x2d\x91\xe8\x1a\xad\x6a\x30\x7d\xcc\xfd\x58\xf3\x4d\x13\x30\xc6\x21\x18\x46\x10\xc9\x5c\x8e\xa6\x08\x98\xe7\xf5\xae\x66\xeb\xfd\x05\x6c\x30\x44\x3b\x61\x73\x62\xe3\x13\x16\x88\x63\xbb\x15\xd5\xe1\x1e\x2a\xf9\x03\xde\xde\x89\xfd\x69\x6c\x97\x05\x4c\xdc\x5a\x4c\x8c\xe5\x6a\xe1\xd1\x39\xb4\xb1\x6f\xff\xdd\x21\x2b\xe6\x36\x6b\x7d\xaf\xa6\x98\x48\xf2\xc5\xc4\x5a\xa0\xdb\xfc\xc2\xf6\xfe\xb2\xc2\x4f\x87\xfd\xf3\x4a\x2d\xc2\xed\xab\xb7\xd2\xd5\xf8\x75\x7c\xac\xe5\x94\xf3\x92\x7e\xa9\x45\xab\x5a\x9d\x56\xeb\x4f\x7f\x06\x00\x00\xff\xff\x0f\xfb\x02\xd9\xf0\x01\x00\x00")

func templates_article_gohtml() ([]byte, error) {
	return bindata_read(
		_templates_article_gohtml,
		"templates/article.gohtml",
	)
}

var _templates_index_gohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x52\x41\x8e\xe3\x20\x10\xbc\xfb\x15\x2d\xb4\x57\xc3\x46\x4a\xa4\x55\x84\x2d\xed\x03\xe6\x34\xf9\x00\xc1\x9d\xc0\x04\x83\x05\x9d\x8c\x2c\xe4\xbf\x8f\x6c\x92\x49\x14\xfb\xd4\xdd\xae\x2e\x8a\x2a\xa4\xa1\xde\xb5\x95\x34\xa8\xba\xb6\x02\x00\x90\x64\xc9\x61\x9b\x33\xf0\x0f\x24\x75\x98\x3b\x98\x26\x29\xca\xbc\x2a\x20\x67\xfd\x05\x22\xba\x86\x25\x1a\x1d\x26\x83\x48\x0c\x4c\xc4\x53\xc3\x0c\xd1\x90\xf6\x42\x24\x52\xfa\x32\x28\x32\xfc\x18\x02\x25\x8a\x6a\xd0\x9d\xe7\x3a\xf4\xe2\x77\x20\xb6\x7c\xc7\xff\x0a\x9d\xd2\x73\xc6\x7b\xeb\xb9\x4e\x89\xb5\x95\x14\x45\x98\x3c\x86\x6e\x2c\xfa\x72\x06\xc2\x7e\x70\x8a\x10\x98\x57\xb7\xa3\x8a\x0c\xa6\x69\xf9\x57\xb4\x75\xf6\x06\xda\xa9\x94\x1a\xa6\x83\x27\x65\x3d\x46\xe8\xc7\x7a\xc7\x0a\xc3\x3b\x28\x86\x6f\xf8\xba\x26\xb2\xa7\xb1\x9e\x17\xd0\x53\xad\xd1\x13\xc6\x97\x85\x35\xb3\xab\xfb\xae\xfe\xf7\x06\x59\x60\x66\xd3\x1e\x8c\x4d\x60\x13\x90\xc1\x59\x31\x7f\xd8\x08\x83\x3a\xa3\x14\x66\x73\x37\xf2\xf5\xcb\x19\xa2\xf2\x67\x84\x3f\x2a\x92\xd5\x0e\x61\xdf\x00\xff\x5f\xea\xf4\xb8\xe3\xfa\xb4\xed\x1c\xd6\x63\x87\x7f\xba\xeb\x79\xc9\xcb\x6c\xd7\xd2\x72\x06\xf4\xdd\x3b\x95\x14\x9d\xbd\xbd\x78\xf3\x6c\xef\xe5\xda\xf8\x53\x08\xb3\x3f\x33\x93\x14\x25\x1c\x29\x96\xb7\xf4\x13\x00\x00\xff\xff\xf3\x2b\x70\x80\x52\x02\x00\x00")

func templates_index_gohtml() ([]byte, error) {
	return bindata_read(
		_templates_index_gohtml,
		"templates/index.gohtml",
	)
}

var _templates_partials_footer_gohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xcb\xcf\x2f\x49\x2d\x52\x52\xa8\xad\xe5\xb2\x49\xc9\x2c\x53\x48\xce\x49\x2c\x2e\xb6\x55\x4a\xce\xcf\x2b\x49\xcc\xcc\x4b\x2d\x52\xb2\xe3\x52\x50\x50\x50\x40\x96\x2b\xca\x2f\x87\x8a\xa2\xcb\x24\xe7\xe7\x20\xc9\x80\x80\x1b\xd8\x78\x85\xdc\xd4\xbc\x52\x84\x0e\xfd\x94\xcc\x32\x62\x0c\x20\x47\x21\x94\x09\xa5\xaa\xab\x15\x52\xf3\x52\x14\x6a\x6b\x01\x01\x00\x00\xff\xff\x3c\xf2\xab\x9e\xf2\x00\x00\x00")

func templates_partials_footer_gohtml() ([]byte, error) {
	return bindata_read(
		_templates_partials_footer_gohtml,
		"templates/partials/footer.gohtml",
	)
}

var _templates_partials_navbar_gohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\xb1\x6e\xdc\x30\x0c\xdd\xef\x2b\x08\x66\x69\x07\xc1\xe8\x6e\x79\x2a\x8a\x4e\x41\x87\xfe\x00\x6d\xf1\x1c\xa2\x0c\x75\x90\x65\x23\xc1\xe1\xfe\xbd\x38\x5b\x76\x7c\x57\x14\x41\x87\x66\xb2\xf5\xf8\xc4\xf7\x9e\x28\x9d\xcf\x10\xf8\x28\xc6\x80\x46\x53\x4b\x09\xe1\x72\x39\xd4\x46\x13\x74\x4a\xc3\xe0\x0b\x0c\xcb\xc7\xf1\xcb\x89\x2c\x38\xed\x57\x40\xa5\x7f\xca\xd0\xf6\xcb\x0f\x36\x07\x00\x80\x9a\x6e\x77\xbb\x36\x91\x05\x84\xa7\xc4\x47\x8f\x0f\xd8\x3c\xce\x70\x5d\x51\xe1\xb7\x63\xce\xd1\xee\x36\xe5\xd8\xf7\xca\x09\x21\xbf\x9e\xd8\xe3\xc2\x41\x08\x94\xa9\xd4\x3c\x76\x51\x95\x4e\x03\xaf\x30\xa5\x9e\xb3\xc7\x87\xa5\xc5\x23\x4d\x08\x94\x84\x5c\x17\x2d\xa7\xa8\x5b\xf3\xb7\xca\x92\x88\x83\xc7\x23\xe9\xb5\xd1\x8c\x2a\xb5\xac\x1e\x7f\xce\x32\xd7\xac\xd2\x53\x96\x68\x25\xe0\x6c\x7a\x38\xd1\x5f\x2c\x3b\xe9\xae\xd4\xba\xba\x52\x4a\xc4\x6a\xf1\x5f\x56\x41\xb6\x03\x5e\x23\xac\x27\xfa\x16\x49\xc2\xde\xee\x4e\x79\xd4\x3b\x5d\xbb\xa9\xcf\x1c\x95\x1d\xc7\x49\xe6\x67\xa0\x2e\xcb\xc4\x77\xc4\x3f\xe6\xe5\x54\xec\xd7\x6e\x56\xdf\xe3\x33\xdf\x86\x1d\x92\x8b\xa6\xaf\xd8\x7c\xea\xc6\x94\xd8\xf2\xe7\x92\x74\x1b\xe8\xd6\xb8\x52\x79\xd7\xd7\xbf\x1a\xfa\xc6\x94\xc7\xc4\xc3\xc7\xa8\xfd\x48\xd2\x89\xf5\xff\x51\x0c\x82\x0c\xd4\x2a\xef\x1e\x08\x64\x6a\xc5\x02\xbf\x78\x74\x5f\xca\x95\x5c\x59\x1e\x73\x1a\x19\x9b\xaf\x65\xfd\x8e\xb3\xba\x1a\x75\xbd\x82\x41\xa6\xe6\x50\x57\x46\x53\x73\x38\x9f\x81\x2d\xc0\xe5\xf2\x3b\x00\x00\xff\xff\x5f\x88\xfc\xbd\x03\x04\x00\x00")

func templates_partials_navbar_gohtml() ([]byte, error) {
	return bindata_read(
		_templates_partials_navbar_gohtml,
		"templates/partials/navbar.gohtml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"markdown/blog_page.md": markdown_blog_page_md,
	"markdown/error.md": markdown_error_md,
	"markdown/first_article.md": markdown_first_article_md,
	"markdown/second_article.md": markdown_second_article_md,
	"templates/article.gohtml": templates_article_gohtml,
	"templates/index.gohtml": templates_index_gohtml,
	"templates/partials/footer.gohtml": templates_partials_footer_gohtml,
	"templates/partials/navbar.gohtml": templates_partials_navbar_gohtml,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"markdown": &_bintree_t{nil, map[string]*_bintree_t{
		"blog_page.md": &_bintree_t{markdown_blog_page_md, map[string]*_bintree_t{
		}},
		"error.md": &_bintree_t{markdown_error_md, map[string]*_bintree_t{
		}},
		"first_article.md": &_bintree_t{markdown_first_article_md, map[string]*_bintree_t{
		}},
		"second_article.md": &_bintree_t{markdown_second_article_md, map[string]*_bintree_t{
		}},
	}},
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"article.gohtml": &_bintree_t{templates_article_gohtml, map[string]*_bintree_t{
		}},
		"index.gohtml": &_bintree_t{templates_index_gohtml, map[string]*_bintree_t{
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"footer.gohtml": &_bintree_t{templates_partials_footer_gohtml, map[string]*_bintree_t{
			}},
			"navbar.gohtml": &_bintree_t{templates_partials_navbar_gohtml, map[string]*_bintree_t{
			}},
		}},
	}},
}}
